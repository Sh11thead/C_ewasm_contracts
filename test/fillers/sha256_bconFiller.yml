sha256_bcon:
  env:
    currentCoinbase: 2adc25665018aa1fe0e6bc666dac8fc2697ff9ba
    currentDifficulty: '0x020000'
    currentGasLimit: '89128960'
    currentNumber: '1'
    currentTimestamp: '1000'
    previousHash: 5e20a0453cecd065ea59c37ac63e079ee08998b6045136a8ce6635c7912ec0b6
  pre:
    a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
      balance: '100000000000'
      code: ''
      nonce: '0'
      storage: {}
    1000000000000000000000000000000000000001:
      balance: '100000000000'
      code: |
        (module
         (import "ethereum" "storageStore" (func $storageStore (param i32 i32)))
         (import "ethereum" "call"         (func $call (param i64 i32 i32 i32 i32) (result i32)))
         (import "ethereum" "returnDataCopy" (func $returnDataCopy (param i32 i32 i32)))
         ;;(import "debug" "printStorageHex" (func $printStorageHex (param i32)))
         ;;(import "debug" "printMemHex" (func $printMemHex (param i32 i32)))
         (memory 1) 
         (data (i32.const 0) "\b9\4f\53\74\fc\e5\ed\bc\8e\2a\86\97\c1\53\31\67\7e\6e\bf\0b")
         (data (i32.const 128) "")
         (data (i32.const 128) "\ab\cd")
         (data (i32.const 130) "\b9\4f\53\74\fc\e5\ed\bc\8e\2a\86\97\c1\53\31\67\7e\6e\bf\0b")
         (data (i32.const 150) "\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa")
         (data (i32.const 225) "\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa\aa")

         (export "main" (func $main))
         (export "memory" (memory 0))
         (func $main
          ;; memory looks like this
          ;; 0                     | 32          | 64            | 96                                  | 128...
          ;; address of precompile | wei to send | returned data | storage key to store returned value | data to process...


          ;; call the precompile at address b94...f0b and send value 0 Eth
          ;;                      gas           addrOffset     valOffset      dataOffset     dataLength
          (drop (call $call (i64.const 200000) (i32.const 0) (i32.const 32) (i32.const 128) (i32.const 0)))
          ;; get return data
          ;;                     resultOffset   dataOffset    length
          (call $returnDataCopy (i32.const 64) (i32.const 0) (i32.const 32))
          ;; store result in storage
          (i32.store8 (i32.const 127) (i32.const 0))
          ;;                     pathOffset     valueOffset
          (call $storageStore (i32.const 96) (i32.const 64))
          ;;(call $printMemHex (i32.const 96) (i32.const 32))
          ;;(call $printStorageHex (i32.const 96))


          ;; call the precompile at address b94...f0b and send value 0 Eth
          ;;                      gas           addrOffset     valOffset      dataOffset     dataLength
          (drop (call $call (i64.const 200000) (i32.const 0) (i32.const 32) (i32.const 128) (i32.const 2)))
          ;; get return data
          ;;                     resultOffset   dataOffset    length
          (call $returnDataCopy (i32.const 64) (i32.const 0) (i32.const 32))
          ;; store result in storage
          (i32.store8 (i32.const 127) (i32.const 1))
          ;;                     pathOffset     valueOffset
          (call $storageStore (i32.const 96) (i32.const 64))
          ;;(call $printMemHex (i32.const 96) (i32.const 32))
          ;;(call $printStorageHex (i32.const 96))


          ;; call the precompile at address b94...f0b and send value 0 Eth
          ;;                      gas           addrOffset     valOffset      dataOffset     dataLength
          (drop (call $call (i64.const 200000) (i32.const 0) (i32.const 32) (i32.const 130) (i32.const 20)))
          ;; get return data
          ;;                     resultOffset   dataOffset    length
          (call $returnDataCopy (i32.const 64) (i32.const 0) (i32.const 32))
          ;; store result in storage
          (i32.store8 (i32.const 127) (i32.const 2))
          ;;                     pathOffset     valueOffset
          (call $storageStore (i32.const 96) (i32.const 64))
          ;;(call $printMemHex (i32.const 96) (i32.const 32))
          ;;(call $printStorageHex (i32.const 96))


          ;; call the precompile at address b94...f0b and send value 0 Eth
          ;;                      gas           addrOffset     valOffset      dataOffset     dataLength
          (drop (call $call (i64.const 200000) (i32.const 0) (i32.const 32) (i32.const 150) (i32.const 75)))
          ;; get return data
          ;;                     resultOffset   dataOffset    length
          (call $returnDataCopy (i32.const 64) (i32.const 0) (i32.const 32))
          ;; store result in storage
          (i32.store8 (i32.const 127) (i32.const 3))
          ;;                     pathOffset     valueOffset
          (call $storageStore (i32.const 96) (i32.const 64))
          ;;(call $printMemHex (i32.const 96) (i32.const 32))
          ;;(call $printStorageHex (i32.const 96))


          ;; call the precompile at address b94...f0b and send value 0 Eth
          ;;                      gas           addrOffset     valOffset      dataOffset     dataLength
          (drop (call $call (i64.const 200000) (i32.const 0) (i32.const 32) (i32.const 225) (i32.const 2025)))
          ;; get return data
          ;;                     resultOffset   dataOffset    length
          (call $returnDataCopy (i32.const 64) (i32.const 0) (i32.const 32))
          ;; store result in storage
          (i32.store8 (i32.const 127) (i32.const 4))
          ;;                     pathOffset     valueOffset
          (call $storageStore (i32.const 96) (i32.const 64))
          ;;(call $printMemHex (i32.const 96) (i32.const 32))
          ;;(call $printStorageHex (i32.const 96))
         )
        )
      nonce: '0'
      storage: {}
    b94f5374fce5edbc8e2a8697c15331677e6ebf0b:
      balance: '100000000000'
      code: |
        (module
         (type $0 (func (result i32)))
         (type $1 (func (param i32 i32 i32)))
         (type $2 (func (param i32 i32)))
         (type $3 (func (param i32) (result i32)))
         (type $4 (func))
         (type $5 (func (param i32 i32)))
         (import "ethereum" "getCallDataSize" (func $fimport$0 (result i32)))
         (import "ethereum" "callDataCopy" (func $fimport$1 (param i32 i32 i32)))
         (import "ethereum" "finish" (func $fimport$2 (param i32 i32)))
         (global $global$0 (mut i32) (i32.const 66832))
         (memory $0 2)
         (data (i32.const 1024) "\10\05")
         (data (i32.const 1040) "\98/\8aB\91D7q\cf\fb\c0\b5\a5\db\b5\e9[\c2V9\f1\11\f1Y\a4\82?\92\d5^\1c\ab\98\aa\07\d8\01[\83\12\be\851$\c3}\0cUt]\ber\fe\b1\de\80\a7\06\dc\9bt\f1\9b\c1\c1i\9b\e4\86G\be\ef\c6\9d\c1\0f\cc\a1\0c$o,\e9-\aa\84tJ\dc\a9\b0\\\da\88\f9vRQ>\98m\c61\a8\c8\'\03\b0\c7\7fY\bf\f3\0b\e0\c6G\91\a7\d5Qc\ca\06g))\14\85\n\b7\'8!\1b.\fcm,M\13\0d8STs\ne\bb\njv.\c9\c2\81\85,r\92\a1\e8\bf\a2Kf\1a\a8p\8bK\c2\a3Ql\c7\19\e8\92\d1$\06\99\d6\855\0e\f4p\a0j\10\16\c1\a4\19\08l7\1eLwH\'\b5\bc\b04\b3\0c\1c9J\aa\d8NO\ca\9c[\f3o.h\ee\82\8ftoc\a5x\14x\c8\84\08\02\c7\8c\fa\ff\be\90\eblP\a4\f7\a3\f9\be\f2xq\c6")
         (export "memory" (memory $0))
         (export "main" (func $4))
         (func $0 (; 3 ;) (type $3) (param $var$0 i32) (result i32)
          (local $var$1 i32)
          (local $var$2 i32)
          (set_local $var$2
           (current_memory)
          )
          (if
           (i32.gt_u
            (tee_local $var$1
             (i32.add
              (i32.load
               (i32.const 1024)
              )
              (get_local $var$0)
             )
            )
            (i32.shl
             (get_local $var$2)
             (i32.const 16)
            )
           )
           (drop
            (grow_memory
             (i32.sub
              (i32.ne
               (i32.sub
                (i32.const 0)
                (i32.and
                 (get_local $var$1)
                 (i32.const 65535)
                )
               )
               (i32.shr_u
                (get_local $var$1)
                (i32.const 16)
               )
              )
              (get_local $var$2)
             )
            )
           )
          )
          (i32.store
           (i32.const 1024)
           (get_local $var$1)
          )
          (i32.sub
           (get_local $var$1)
           (get_local $var$0)
          )
         )
         (func $1 (; 4 ;) (type $5) (param $var$0 i32) (param $var$1 i32)
          (if
           (get_local $var$1)
           (loop $label$2
            (i32.store8
             (get_local $var$0)
             (i32.const 0)
            )
            (set_local $var$0
             (i32.add
              (get_local $var$0)
              (i32.const 1)
             )
            )
            (br_if $label$2
             (tee_local $var$1
              (i32.add
               (get_local $var$1)
               (i32.const -1)
              )
             )
            )
           )
          )
         )
         (func $2 (; 5 ;) (type $2) (param $var$0 i32) (param $var$1 i32)
          (local $var$2 i32)
          (local $var$3 i32)
          (local $var$4 i32)
          (local $var$5 i32)
          (local $var$6 i32)
          (local $var$7 i32)
          (local $var$8 i32)
          (local $var$9 i32)
          (local $var$10 i32)
          (local $var$11 i32)
          (local $var$12 i32)
          (local $var$13 i32)
          (local $var$14 i32)
          (local $var$15 i32)
          (local $var$16 i32)
          (local $var$17 i32)
          (local $var$18 i32)
          (local $var$19 i32)
          (local $var$20 i32)
          (set_global $global$0
           (tee_local $var$4
            (i32.sub
             (get_global $global$0)
             (i32.const 256)
            )
           )
          )
          (loop $label$1
           (i32.store
            (i32.add
             (get_local $var$2)
             (get_local $var$4)
            )
            (i32.or
             (i32.or
              (i32.shl
               (tee_local $var$3
                (i32.load align=1
                 (i32.add
                  (get_local $var$1)
                  (get_local $var$2)
                 )
                )
               )
               (i32.const 24)
              )
              (i32.and
               (i32.shl
                (get_local $var$3)
                (i32.const 8)
               )
               (i32.const 16711680)
              )
             )
             (i32.or
              (i32.and
               (i32.shr_u
                (get_local $var$3)
                (i32.const 8)
               )
               (i32.const 65280)
              )
              (i32.shr_u
               (get_local $var$3)
               (i32.const 24)
              )
             )
            )
           )
           (br_if $label$1
            (i32.ne
             (tee_local $var$2
              (i32.add
               (get_local $var$2)
               (i32.const 4)
              )
             )
             (i32.const 64)
            )
           )
          )
          (set_local $var$2
           (i32.const 0)
          )
          (set_local $var$1
           (i32.load
            (get_local $var$4)
           )
          )
          (loop $label$2
           (i32.store
            (i32.sub
             (tee_local $var$3
              (i32.add
               (get_local $var$2)
               (get_local $var$4)
              )
             )
             (i32.const -64)
            )
            (i32.add
             (i32.add
              (i32.add
               (i32.load
                (i32.add
                 (get_local $var$3)
                 (i32.const 36)
                )
               )
               (get_local $var$1)
              )
              (i32.xor
               (i32.xor
                (i32.rotl
                 (tee_local $var$1
                  (i32.load
                   (i32.add
                    (get_local $var$3)
                    (i32.const 56)
                   )
                  )
                 )
                 (i32.const 13)
                )
                (i32.shr_u
                 (get_local $var$1)
                 (i32.const 10)
                )
               )
               (i32.rotl
                (get_local $var$1)
                (i32.const 15)
               )
              )
             )
             (i32.xor
              (i32.xor
               (i32.rotl
                (tee_local $var$1
                 (i32.load
                  (i32.add
                   (get_local $var$3)
                   (i32.const 4)
                  )
                 )
                )
                (i32.const 14)
               )
               (i32.shr_u
                (get_local $var$1)
                (i32.const 3)
               )
              )
              (i32.rotl
               (get_local $var$1)
               (i32.const 25)
              )
             )
            )
           )
           (br_if $label$2
            (i32.ne
             (tee_local $var$2
              (i32.add
               (get_local $var$2)
               (i32.const 4)
              )
             )
             (i32.const 192)
            )
           )
          )
          (set_local $var$1
           (i32.const 0)
          )
          (set_local $var$9
           (tee_local $var$13
            (i32.load offset=80
             (get_local $var$0)
            )
           )
          )
          (set_local $var$2
           (tee_local $var$14
            (i32.load
             (i32.add
              (get_local $var$0)
              (i32.const 84)
             )
            )
           )
          )
          (set_local $var$10
           (tee_local $var$15
            (i32.load
             (i32.add
              (get_local $var$0)
              (i32.const 108)
             )
            )
           )
          )
          (set_local $var$6
           (tee_local $var$16
            (i32.load
             (i32.add
              (get_local $var$0)
              (i32.const 104)
             )
            )
           )
          )
          (set_local $var$7
           (tee_local $var$17
            (i32.load
             (i32.add
              (get_local $var$0)
              (i32.const 100)
             )
            )
           )
          )
          (set_local $var$5
           (tee_local $var$18
            (i32.load
             (i32.add
              (get_local $var$0)
              (i32.const 96)
             )
            )
           )
          )
          (set_local $var$11
           (tee_local $var$19
            (i32.load
             (i32.add
              (get_local $var$0)
              (i32.const 92)
             )
            )
           )
          )
          (set_local $var$8
           (tee_local $var$20
            (i32.load
             (i32.add
              (get_local $var$0)
              (i32.const 88)
             )
            )
           )
          )
          (loop $label$3
           (set_local $var$9
            (i32.add
             (tee_local $var$5
              (i32.add
               (i32.load
                (i32.add
                 (get_local $var$1)
                 (get_local $var$4)
                )
               )
               (i32.add
                (i32.add
                 (i32.load
                  (i32.add
                   (get_local $var$1)
                   (i32.const 1040)
                  )
                 )
                 (i32.add
                  (i32.or
                   (i32.and
                    (i32.xor
                     (tee_local $var$3
                      (get_local $var$5)
                     )
                     (i32.const -1)
                    )
                    (get_local $var$6)
                   )
                   (i32.and
                    (get_local $var$3)
                    (get_local $var$7)
                   )
                  )
                  (get_local $var$10)
                 )
                )
                (i32.xor
                 (i32.xor
                  (i32.rotl
                   (get_local $var$3)
                   (i32.const 26)
                  )
                  (i32.rotl
                   (get_local $var$3)
                   (i32.const 21)
                  )
                 )
                 (i32.rotl
                  (get_local $var$3)
                  (i32.const 7)
                 )
                )
               )
              )
             )
             (i32.add
              (i32.xor
               (i32.and
                (i32.xor
                 (tee_local $var$12
                  (get_local $var$8)
                 )
                 (tee_local $var$8
                  (get_local $var$2)
                 )
                )
                (tee_local $var$2
                 (get_local $var$9)
                )
               )
               (i32.and
                (get_local $var$8)
                (get_local $var$12)
               )
              )
              (i32.xor
               (i32.xor
                (i32.rotl
                 (get_local $var$2)
                 (i32.const 30)
                )
                (i32.rotl
                 (get_local $var$2)
                 (i32.const 19)
                )
               )
               (i32.rotl
                (get_local $var$2)
                (i32.const 10)
               )
              )
             )
            )
           )
           (set_local $var$5
            (i32.add
             (get_local $var$5)
             (get_local $var$11)
            )
           )
           (set_local $var$10
            (get_local $var$6)
           )
           (set_local $var$6
            (get_local $var$7)
           )
           (set_local $var$7
            (get_local $var$3)
           )
           (set_local $var$11
            (get_local $var$12)
           )
           (br_if $label$3
            (i32.ne
             (tee_local $var$1
              (i32.add
               (get_local $var$1)
               (i32.const 4)
              )
             )
             (i32.const 256)
            )
           )
          )
          (i32.store offset=108
           (get_local $var$0)
           (i32.add
            (get_local $var$10)
            (get_local $var$15)
           )
          )
          (i32.store offset=104
           (get_local $var$0)
           (i32.add
            (get_local $var$6)
            (get_local $var$16)
           )
          )
          (i32.store offset=100
           (get_local $var$0)
           (i32.add
            (get_local $var$7)
            (get_local $var$17)
           )
          )
          (i32.store offset=96
           (get_local $var$0)
           (i32.add
            (get_local $var$5)
            (get_local $var$18)
           )
          )
          (i32.store offset=92
           (get_local $var$0)
           (i32.add
            (get_local $var$11)
            (get_local $var$19)
           )
          )
          (i32.store offset=88
           (get_local $var$0)
           (i32.add
            (get_local $var$8)
            (get_local $var$20)
           )
          )
          (i32.store offset=84
           (get_local $var$0)
           (i32.add
            (get_local $var$2)
            (get_local $var$14)
           )
          )
          (i32.store offset=80
           (get_local $var$0)
           (i32.add
            (get_local $var$9)
            (get_local $var$13)
           )
          )
          (set_global $global$0
           (i32.add
            (get_local $var$4)
            (i32.const 256)
           )
          )
         )
         (func $3 (; 6 ;) (type $2) (param $var$0 i32) (param $var$1 i32)
          (local $var$2 i32)
          (local $var$3 i32)
          (local $var$4 i32)
          (local $var$5 i32)
          (local $var$6 i32)
          (local $var$7 i32)
          (local $var$8 i32)
          (local $var$9 i64)
          (i32.store8
           (i32.add
            (get_local $var$0)
            (tee_local $var$2
             (i32.load offset=64
              (get_local $var$0)
             )
            )
           )
           (i32.const 128)
          )
          (set_local $var$3
           (i32.add
            (get_local $var$2)
            (i32.const 1)
           )
          )
          (block $label$1
           (if
            (i32.ge_u
             (get_local $var$2)
             (i32.const 56)
            )
            (block
             (if
              (i32.le_u
               (get_local $var$3)
               (i32.const 63)
              )
              (call $1
               (i32.add
                (get_local $var$0)
                (get_local $var$3)
               )
               (i32.sub
                (i32.const 63)
                (get_local $var$2)
               )
              )
             )
             (call $2
              (get_local $var$0)
              (get_local $var$0)
             )
             (i64.store
              (i32.add
               (get_local $var$0)
               (i32.const 48)
              )
              (i64.const 0)
             )
             (i64.store
              (i32.add
               (get_local $var$0)
               (i32.const 40)
              )
              (i64.const 0)
             )
             (i64.store
              (i32.add
               (get_local $var$0)
               (i32.const 32)
              )
              (i64.const 0)
             )
             (i64.store
              (i32.add
               (get_local $var$0)
               (i32.const 24)
              )
              (i64.const 0)
             )
             (i64.store
              (i32.add
               (get_local $var$0)
               (i32.const 16)
              )
              (i64.const 0)
             )
             (i64.store
              (i32.add
               (get_local $var$0)
               (i32.const 8)
              )
              (i64.const 0)
             )
             (i64.store
              (get_local $var$0)
              (i64.const 0)
             )
             (br $label$1)
            )
           )
           (br_if $label$1
            (i32.gt_u
             (get_local $var$3)
             (i32.const 55)
            )
           )
           (call $1
            (i32.add
             (get_local $var$0)
             (get_local $var$3)
            )
            (i32.sub
             (i32.const 55)
             (get_local $var$2)
            )
           )
          )
          (i64.store offset=72
           (get_local $var$0)
           (tee_local $var$9
            (i64.add
             (i64.load offset=72
              (get_local $var$0)
             )
             (i64.extend_u/i32
              (i32.shl
               (i32.load offset=64
                (get_local $var$0)
               )
               (i32.const 3)
              )
             )
            )
           )
          )
          (i64.store8 offset=63
           (get_local $var$0)
           (get_local $var$9)
          )
          (i64.store8 offset=62
           (get_local $var$0)
           (i64.shr_u
            (get_local $var$9)
            (i64.const 8)
           )
          )
          (i64.store8 offset=61
           (get_local $var$0)
           (i64.shr_u
            (get_local $var$9)
            (i64.const 16)
           )
          )
          (i64.store8 offset=60
           (get_local $var$0)
           (i64.shr_u
            (get_local $var$9)
            (i64.const 24)
           )
          )
          (i64.store8 offset=59
           (get_local $var$0)
           (i64.shr_u
            (get_local $var$9)
            (i64.const 32)
           )
          )
          (i64.store8 offset=58
           (get_local $var$0)
           (i64.shr_u
            (get_local $var$9)
            (i64.const 40)
           )
          )
          (i64.store8 offset=57
           (get_local $var$0)
           (i64.shr_u
            (get_local $var$9)
            (i64.const 48)
           )
          )
          (i64.store8 offset=56
           (get_local $var$0)
           (i64.shr_u
            (get_local $var$9)
            (i64.const 56)
           )
          )
          (call $2
           (get_local $var$0)
           (get_local $var$0)
          )
          (i32.store8
           (get_local $var$1)
           (i32.load8_u
            (i32.add
             (get_local $var$0)
             (i32.const 83)
            )
           )
          )
          (i32.store8 offset=4
           (get_local $var$1)
           (i32.load8_u
            (i32.add
             (get_local $var$0)
             (i32.const 87)
            )
           )
          )
          (i32.store8 offset=8
           (get_local $var$1)
           (i32.load8_u
            (i32.add
             (get_local $var$0)
             (i32.const 91)
            )
           )
          )
          (i32.store8 offset=12
           (get_local $var$1)
           (i32.load8_u
            (i32.add
             (get_local $var$0)
             (i32.const 95)
            )
           )
          )
          (i32.store8 offset=16
           (get_local $var$1)
           (i32.load8_u
            (i32.add
             (get_local $var$0)
             (i32.const 99)
            )
           )
          )
          (i32.store8 offset=20
           (get_local $var$1)
           (i32.load8_u
            (i32.add
             (get_local $var$0)
             (i32.const 103)
            )
           )
          )
          (i32.store8 offset=24
           (get_local $var$1)
           (i32.load8_u
            (i32.add
             (get_local $var$0)
             (i32.const 107)
            )
           )
          )
          (i32.store8 offset=28
           (get_local $var$1)
           (i32.load8_u
            (i32.add
             (get_local $var$0)
             (i32.const 111)
            )
           )
          )
          (i32.store8 offset=1
           (get_local $var$1)
           (i32.load16_u
            (i32.add
             (get_local $var$0)
             (i32.const 82)
            )
           )
          )
          (i32.store8 offset=5
           (get_local $var$1)
           (i32.load16_u
            (i32.add
             (get_local $var$0)
             (i32.const 86)
            )
           )
          )
          (i32.store8 offset=9
           (get_local $var$1)
           (i32.load16_u
            (i32.add
             (get_local $var$0)
             (i32.const 90)
            )
           )
          )
          (i32.store8 offset=13
           (get_local $var$1)
           (i32.load16_u
            (i32.add
             (get_local $var$0)
             (i32.const 94)
            )
           )
          )
          (i32.store8 offset=17
           (get_local $var$1)
           (i32.load16_u
            (i32.add
             (get_local $var$0)
             (i32.const 98)
            )
           )
          )
          (i32.store8 offset=21
           (get_local $var$1)
           (i32.load16_u
            (i32.add
             (get_local $var$0)
             (i32.const 102)
            )
           )
          )
          (i32.store8 offset=25
           (get_local $var$1)
           (i32.load16_u
            (i32.add
             (get_local $var$0)
             (i32.const 106)
            )
           )
          )
          (i32.store8 offset=29
           (get_local $var$1)
           (i32.load16_u
            (i32.add
             (get_local $var$0)
             (i32.const 110)
            )
           )
          )
          (i32.store8 offset=2
           (get_local $var$1)
           (i32.shr_u
            (i32.load offset=80
             (get_local $var$0)
            )
            (i32.const 8)
           )
          )
          (i32.store8 offset=6
           (get_local $var$1)
           (i32.shr_u
            (i32.load
             (tee_local $var$2
              (i32.add
               (get_local $var$0)
               (i32.const 84)
              )
             )
            )
            (i32.const 8)
           )
          )
          (i32.store8 offset=10
           (get_local $var$1)
           (i32.shr_u
            (i32.load
             (tee_local $var$3
              (i32.add
               (get_local $var$0)
               (i32.const 88)
              )
             )
            )
            (i32.const 8)
           )
          )
          (i32.store8 offset=14
           (get_local $var$1)
           (i32.shr_u
            (i32.load
             (tee_local $var$4
              (i32.add
               (get_local $var$0)
               (i32.const 92)
              )
             )
            )
            (i32.const 8)
           )
          )
          (i32.store8 offset=18
           (get_local $var$1)
           (i32.shr_u
            (i32.load
             (tee_local $var$5
              (i32.add
               (get_local $var$0)
               (i32.const 96)
              )
             )
            )
            (i32.const 8)
           )
          )
          (i32.store8 offset=22
           (get_local $var$1)
           (i32.shr_u
            (i32.load
             (tee_local $var$6
              (i32.add
               (get_local $var$0)
               (i32.const 100)
              )
             )
            )
            (i32.const 8)
           )
          )
          (i32.store8 offset=26
           (get_local $var$1)
           (i32.shr_u
            (i32.load
             (tee_local $var$7
              (i32.add
               (get_local $var$0)
               (i32.const 104)
              )
             )
            )
            (i32.const 8)
           )
          )
          (i32.store8 offset=30
           (get_local $var$1)
           (i32.shr_u
            (i32.load
             (tee_local $var$8
              (i32.add
               (get_local $var$0)
               (i32.const 108)
              )
             )
            )
            (i32.const 8)
           )
          )
          (i32.store8 offset=3
           (get_local $var$1)
           (i32.load offset=80
            (get_local $var$0)
           )
          )
          (i32.store8 offset=7
           (get_local $var$1)
           (i32.load
            (get_local $var$2)
           )
          )
          (i32.store8 offset=11
           (get_local $var$1)
           (i32.load
            (get_local $var$3)
           )
          )
          (i32.store8 offset=15
           (get_local $var$1)
           (i32.load
            (get_local $var$4)
           )
          )
          (i32.store8 offset=19
           (get_local $var$1)
           (i32.load
            (get_local $var$5)
           )
          )
          (i32.store8 offset=23
           (get_local $var$1)
           (i32.load
            (get_local $var$6)
           )
          )
          (i32.store8 offset=27
           (get_local $var$1)
           (i32.load
            (get_local $var$7)
           )
          )
          (i32.store8 offset=31
           (get_local $var$1)
           (i32.load
            (get_local $var$8)
           )
          )
         )
         (func $4 (; 7 ;) (type $4)
          (local $var$0 i32)
          (local $var$1 i32)
          (local $var$2 i32)
          (local $var$3 i32)
          (set_global $global$0
           (tee_local $var$0
            (i32.sub
             (get_global $global$0)
             (i32.const 144)
            )
           )
          )
          (call $fimport$1
           (tee_local $var$3
            (call $0
             (tee_local $var$2
              (call $fimport$0)
             )
            )
           )
           (i32.const 0)
           (get_local $var$2)
          )
          (i64.store
           (i32.add
            (get_local $var$0)
            (i32.const 104)
           )
           (i64.const 6620516960021240235)
          )
          (i64.store
           (i32.add
            (get_local $var$0)
            (i32.const 96)
           )
           (i64.const -7276294671082564993)
          )
          (i64.store
           (i32.add
            (get_local $var$0)
            (i32.const 88)
           )
           (i64.const -6534734903820487822)
          )
          (i64.store offset=80
           (get_local $var$0)
           (i64.const -4942790177982912921)
          )
          (i64.store offset=72
           (get_local $var$0)
           (i64.const 0)
          )
          (i32.store offset=64
           (get_local $var$0)
           (i32.const 0)
          )
          (if
           (get_local $var$2)
           (loop $label$2
            (i32.store8
             (i32.add
              (get_local $var$0)
              (get_local $var$1)
             )
             (i32.load8_u
              (get_local $var$3)
             )
            )
            (i32.store offset=64
             (get_local $var$0)
             (tee_local $var$1
              (i32.add
               (i32.load offset=64
                (get_local $var$0)
               )
               (i32.const 1)
              )
             )
            )
            (if
             (i32.eq
              (get_local $var$1)
              (i32.const 64)
             )
             (block
              (call $2
               (get_local $var$0)
               (get_local $var$0)
              )
              (i32.store offset=64
               (get_local $var$0)
               (i32.const 0)
              )
              (i64.store offset=72
               (get_local $var$0)
               (i64.add
                (i64.load offset=72
                 (get_local $var$0)
                )
                (i64.const 512)
               )
              )
              (set_local $var$1
               (i32.const 0)
              )
             )
            )
            (set_local $var$3
             (i32.add
              (get_local $var$3)
              (i32.const 1)
             )
            )
            (br_if $label$2
             (tee_local $var$2
              (i32.add
               (get_local $var$2)
               (i32.const -1)
              )
             )
            )
           )
          )
          (call $3
           (get_local $var$0)
           (i32.add
            (get_local $var$0)
            (i32.const 112)
           )
          )
          (call $fimport$2
           (i32.add
            (get_local $var$0)
            (i32.const 112)
           )
           (i32.const 32)
          )
          (set_global $global$0
           (i32.add
            (get_local $var$0)
            (i32.const 144)
           )
          )
         )
        )
        

      nonce: ''
      storage: {}
  expect:
    - indexes:
        data: !!int -1
        gas: !!int -1
        value: !!int -1
      network:
        - ALL
      result:
        1000000000000000000000000000000000000001:
          storage: {
            0: '0xe3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855',
            1: '0x123d4c7ef2d1600a1b3a0f6addc60a10f05a3495c9409f2ecbf4cc095d000a6b',
            2: '0x19084e0da6fbab6d3b6026c1f12c9ea9eb68519c24760b1e60c40b75bb854151',
            3: '0x7b08b87be5fb4aab5b3287994c6738310656f5435b7ae9310712307640ffb1f1',
            4: '0x640c3b9f36353daa44387138470b6af582321142dfdc380d3fec0facac105796'
            }
        b94f5374fce5edbc8e2a8697c15331677e6ebf0b:
          storage: {}
  transaction:
    data:
    - ''
    gasLimit:
    - '0x5000001'
    gasPrice: '0x01'
    nonce: '0x00'
    secretKey: 45a915e4d060149eb4365960e6a7a45f334393093061116b197e3240065ff2d8
    to: '1000000000000000000000000000000000000001'
    value:
    - '0'